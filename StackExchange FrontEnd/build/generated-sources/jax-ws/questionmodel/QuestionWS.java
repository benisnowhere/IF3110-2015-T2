
package questionmodel;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "QuestionWS", targetNamespace = "http://QuestionModel/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface QuestionWS {


    /**
     * 
     * @return
     *     returns java.util.List<questionmodel.Question>
     */
    @WebMethod
    @WebResult(name = "Question", targetNamespace = "")
    @RequestWrapper(localName = "getQuestion", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetQuestion")
    @ResponseWrapper(localName = "getQuestionResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/getQuestionRequest", output = "http://QuestionModel/QuestionWS/getQuestionResponse")
    public List<Question> getQuestion();

    /**
     * 
     * @param accessToken
     * @param title
     * @param content
     * @return
     *     returns int
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(name = "insQuestion", targetNamespace = "")
    @RequestWrapper(localName = "insertQuestion", targetNamespace = "http://QuestionModel/", className = "questionmodel.InsertQuestion")
    @ResponseWrapper(localName = "insertQuestionResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.InsertQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/insertQuestionRequest", output = "http://QuestionModel/QuestionWS/insertQuestionResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://QuestionModel/QuestionWS/insertQuestion/Fault/Exception")
    })
    public int insertQuestion(
        @WebParam(name = "access_token", targetNamespace = "")
        String accessToken,
        @WebParam(name = "title", targetNamespace = "")
        String title,
        @WebParam(name = "content", targetNamespace = "")
        String content)
        throws Exception_Exception
    ;

    /**
     * 
     * @param topic
     * @param accessToken
     * @param content
     * @return
     *     returns int
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(name = "updQuestion", targetNamespace = "")
    @RequestWrapper(localName = "updateQuestion", targetNamespace = "http://QuestionModel/", className = "questionmodel.UpdateQuestion")
    @ResponseWrapper(localName = "updateQuestionResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.UpdateQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/updateQuestionRequest", output = "http://QuestionModel/QuestionWS/updateQuestionResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://QuestionModel/QuestionWS/updateQuestion/Fault/Exception")
    })
    public int updateQuestion(
        @WebParam(name = "access_token", targetNamespace = "")
        String accessToken,
        @WebParam(name = "topic", targetNamespace = "")
        String topic,
        @WebParam(name = "content", targetNamespace = "")
        String content)
        throws Exception_Exception
    ;

    /**
     * 
     * @param accessToken
     * @param qid
     * @return
     *     returns int
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(name = "delQuestion", targetNamespace = "")
    @RequestWrapper(localName = "deleteQuesetion", targetNamespace = "http://QuestionModel/", className = "questionmodel.DeleteQuesetion")
    @ResponseWrapper(localName = "deleteQuesetionResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.DeleteQuesetionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/deleteQuesetionRequest", output = "http://QuestionModel/QuestionWS/deleteQuesetionResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://QuestionModel/QuestionWS/deleteQuesetion/Fault/Exception")
    })
    public int deleteQuesetion(
        @WebParam(name = "access_token", targetNamespace = "")
        String accessToken,
        @WebParam(name = "qid", targetNamespace = "")
        int qid)
        throws Exception_Exception
    ;

}
